Arepa - Сервис управления X509 сертификатами, (?) состоящий из нескольких микросервисов (?).

Используемые технологии: Spring Boot + Spring Secure + JPA (Hibernate) + JCA (BouncyCastle) + ...

Мотивация: в настоящее время популярность набирает направление IoT. Один из сегментов этого направления - Умные Дома. Внутри Умного Дома различные устройства объединяются в сеть и обмениваются различной информацией, в конечном счёте делая жизнь хозяина Дома более комфортной. Одна из возникающих проблем - безопасность обмена данными внутри сети. Очевидным выходом из ситуации является шифрование данных, а так же их валидация при помощи цифровых подписей.

Задача: предоставление владельцам Умных Домов централизованного сервиса, позволяющего при помощи PKI управлять доступом в локальную сеть своего Дома различных устройств. Доступ контролируется на основе X509 сертификатов

Юзкейсы (черновик):
1) Пользователь регистрируется на Сервисе. Для пользователя разворачивается личный кабинет.
2) Пользователь в личном кабинете создаёт новую группу устройств, указывая уникальное для своего аккаунта название группы. Для группы генерируется CA сертификат.
3) Пользователь хочет добавить в группу новое устройство:
   3.1) Пользователь в личном кабинете добавляет устройство в определённую группу. В ответ пользователь получает временный одноразовый token для данного устройства. В tokene закодирована информация о группе, пользователе и т.д.
   3.1) Пользователь указывает в специальном меню добавляемого устройства полученный ранее token.
   3.2.а) Устройство само будет генерировать для себя приватный ключ
       3.2.а.1) Устройство запрашивает у Сервиса для себя pubId (публичный идентификатор) в рамках группы, а также прочие необходимые для CSR атрибуты
       3.2.а.2) Устройство генерирует приватный ключ
       3.2.а.3) На основе информации из (3.2.а.1) устройство генерирует CSR и отправляет его Сервису для получения нового Х509 сетификата
       3.2.а.4) Сервис проверяет валидность данных в CSR, выписывает новый X509 сертификат и отправляет устройству выписанный сертификат и CA сертификат группы
   3.2.б) Сервис самостоятельно генерирует для устройства приватный ключ и Х509 сертификат
       3.2.б.1) Устройство запрашивает у Сервиса новый приватный ключ и X509 сертификат
       3.2.б.2) Сервис генерирует приватный ключ и новый X509 сертификат и отправляет сгенерированные данные и CA сертификат группы устройству
4) Пользователь хочет удалить устройство из группы.
   4.1) Пользователь выбирает в списке устройств, зарегистрированных в группе, нужное устройство по его имени
   4.2) Пользователь отправляет запрос Сервису
   4.3) Сервис отзывает Х509 сертификат устройства и обновляет CRL группы
5) Пользователь может обновить сертификат устройства.
6) Устройства переодически обновляют статус группы, запрашивая у Сервиса CRL групп, в которых они состоят, либо сервис работает как OSCP-респондер.

Проблемы:
1) Компрометация token даёт возможность добавить нелегальное устройство. Необходимо усилить защиту token, либо придумать новый механизм идентификации устройств.
